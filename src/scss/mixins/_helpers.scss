/* 
 * Useful Visual Elements
 * ========================================================================== */

@mixin arrow-up($size: 5px, $color: #000) {
    width: 0; 
    height: 0; 
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
}
@mixin arrow-down($size: 5px, $color: #000) {
    width: 0; 
    height: 0; 
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
}
@mixin arrow-left($size: 5px, $color: #000) {
    width: 0; 
    height: 0; 
    border-top: $size solid transparent;
    border-bottom: $size solid transparent; 
    border-right: $size solid $color; 
}
@mixin arrow-right($size: 5px, $color: #000) {
    width: 0; 
    height: 0; 
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
}


// Shortcuts
// -------------------
@mixin size($height, $width) {
    width: $width;
    height: $height;
}

@mixin hide-text() {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
}

@mixin clearfix {
  &:after {
  content: "";
  display: table;
  clear: both;
  }
}

@mixin float {
  float: left;
  width: 100%;
}

@mixin center() {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin reset-center() {
  position: relative;
  top: auto;
  left: auto;
  transform: none;
}

@mixin center-vertically() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin reset-center-vertically() {
  position: relative;
  top: auto;
  transform: none;
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
}

// Math
// -------------------
@function number($number) {
  @return $number / ($number * 0 + 1);
}

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;
 
  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }
 
  @return $x1;
}

@function pow($x, $n) {
  $result: 1;
 
  @for $i from 1 through $n {
    $result: $result * number($x);
  }
 
  @return $result;
}